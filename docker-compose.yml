# ============================================
# Docker Compose for Telegram Summarizer Bot
# ============================================
# Services:
#   - mongodb: MongoDB database
#   - bot: Telegram bot application
# ============================================

version: '3.8'

services:
  # ==========================================
  # MongoDB Database Service
  # ==========================================
  mongodb:
    image: mongo:7.0
    container_name: telegram_summarizer_mongodb
    restart: unless-stopped
    
    environment:
      # MongoDB root credentials (change in production!)
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: changeme_strong_password
      MONGO_INITDB_DATABASE: telegram_summarizer
    
    ports:
      # Expose MongoDB port (for local development)
      # Comment out in production for security
      - "27017:27017"
    
    volumes:
      # Persist MongoDB data
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    
    networks:
      - bot_network
    
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # ==========================================
  # Telegram Bot Service
  # ==========================================
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    
    container_name: telegram_summarizer_bot
    restart: unless-stopped
    
    # Wait for MongoDB to be ready
    depends_on:
      mongodb:
        condition: service_healthy
    
    environment:
      # Telegram Bot Token (required)
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      
      # Claude AI API Key (required)
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      
      # MongoDB connection
      MONGODB_URL: mongodb://admin:changeme_strong_password@mongodb:27017/telegram_summarizer?authSource=admin
      MONGODB_DB_NAME: telegram_summarizer
      
      # Claude settings
      CLAUDE_MODEL: ${CLAUDE_MODEL:-claude-sonnet-4-5-20250929}
      CLAUDE_MAX_TOKENS: ${CLAUDE_MAX_TOKENS:-2048}
      CLAUDE_TIMEOUT: ${CLAUDE_TIMEOUT:-120}
      
      # Bot behavior
      MAX_MESSAGE_BUFFER: ${MAX_MESSAGE_BUFFER:-50}
      MAX_SUMMARIES_PER_USER: ${MAX_SUMMARIES_PER_USER:-5}
      DEFAULT_SUMMARY_COUNT: ${DEFAULT_SUMMARY_COUNT:-50}
      
      # Application settings
      APP_ENV: ${APP_ENV:-production}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # Optional: Webhook settings (for Render/Heroku)
      # RENDER_EXTERNAL_URL: ${RENDER_EXTERNAL_URL}
      # PORT: ${PORT:-8080}
    
    # Mount code for development (comment out in production)
    # volumes:
    #   - .:/app
    
    networks:
      - bot_network
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# ==========================================
# Networks
# ==========================================
networks:
  bot_network:
    driver: bridge

# ==========================================
# Volumes
# ==========================================
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
